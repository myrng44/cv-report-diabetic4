<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/config.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/config.py" />
              <option name="originalContent" value="&quot;&quot;&quot;&#10;Configuration file for SANGO-based Diabetic Retinopathy Detection System&#10;&quot;&quot;&quot;&#10;&#10;import os&#10;&#10;# Paths&#10;BASE_DIR = os.path.dirname(os.path.abspath(__file__))&#10;DATA_DIR = os.path.join(BASE_DIR, 'data')&#10;&#10;# Classification paths&#10;CLASS_TRAIN_IMG_DIR = os.path.join(DATA_DIR, 'B. Disease Grading', '1. Original Images', 'a. Training Set')&#10;CLASS_TEST_IMG_DIR = os.path.join(DATA_DIR, 'B. Disease Grading', '1. Original Images', 'b. Testing Set')&#10;CLASS_TRAIN_LABELS = os.path.join(DATA_DIR, 'B. Disease Grading', '2. Groundtruths', 'a. IDRiD_Disease Grading_Training Labels.csv')&#10;CLASS_TEST_LABELS = os.path.join(DATA_DIR, 'B. Disease Grading', '2. Groundtruths', 'b. IDRiD_Disease Grading_Testing Labels.csv')&#10;&#10;# Segmentation paths&#10;SEG_TRAIN_IMG_DIR = os.path.join(DATA_DIR, 'A. Segmentation', '1. Original Images', 'a. Training Set')&#10;SEG_TEST_IMG_DIR = os.path.join(DATA_DIR, 'A. Segmentation', '1. Original Images', 'b. Testing Set')&#10;SEG_TRAIN_MASK_DIR = os.path.join(DATA_DIR, 'A. Segmentation', '2. All Segmentation Groundtruths', 'a. Training Set')&#10;SEG_TEST_MASK_DIR = os.path.join(DATA_DIR, 'A. Segmentation', '2. All Segmentation Groundtruths', 'b. Testing Set')&#10;&#10;# Output directories&#10;OUTPUT_DIR = os.path.join(BASE_DIR, 'outputs')&#10;MODEL_DIR = os.path.join(OUTPUT_DIR, 'models')&#10;LOG_DIR = os.path.join(OUTPUT_DIR, 'logs')&#10;RESULT_DIR = os.path.join(OUTPUT_DIR, 'results')&#10;&#10;# Create output directories&#10;for dir_path in [OUTPUT_DIR, MODEL_DIR, LOG_DIR, RESULT_DIR]:&#10;    os.makedirs(dir_path, exist_ok=True)&#10;&#10;# Model hyperparameters - Optimized for better performance&#10;IMG_SIZE = 384  # Increased from 256 for better feature extraction&#10;BATCH_SIZE = 4  # Keep at 4 for CPU, can increase to 8-16 with GPU&#10;NUM_WORKERS = 2  # Reduced for stability&#10;NUM_CLASSES = 5  # DR grades: 0, 1, 2, 3, 4&#10;SEG_CLASSES = 3  # Microaneurysms, Haemorrhages, Hard Exudates&#10;&#10;# Training parameters&#10;LEARNING_RATE = 5e-5  # Reduced for more stable training&#10;NUM_EPOCHS = 50  # Increased for better convergence&#10;EARLY_STOPPING_PATIENCE = 15  # Increased patience&#10;WEIGHT_DECAY = 1e-4  # Increased for better regularization&#10;&#10;# SANGO algorithm parameters&#10;POPULATION_SIZE = 20  # Reduced for faster computation&#10;MAX_ITERATIONS = 30  # Reduced for faster training&#10;ALPHA = 2.0  # Self-adaptive parameter&#10;BETA = 1.5  # Northern Goshawk exploration parameter&#10;&#10;# GRU parameters&#10;GRU_HIDDEN_SIZE = 128  # Reduced from 256&#10;GRU_NUM_LAYERS = 2&#10;GRU_DROPOUT = 0.3&#10;&#10;# Feature extraction parameters&#10;LBP_POINTS = 8&#10;LBP_RADIUS = 1&#10;SURF_THRESHOLD = 100&#10;&#10;# Gabor filter parameters&#10;GABOR_FREQUENCY = 0.1&#10;GABOR_THETA_VALUES = 8  # Number of orientations&#10;GABOR_SIGMA = 3&#10;GABOR_LAMBDA = 10&#10;GABOR_GAMMA = 0.5&#10;&#10;# CLAHE parameters&#10;CLAHE_CLIP_LIMIT = 2.0&#10;CLAHE_TILE_GRID_SIZE = (8, 8)&#10;&#10;# Data augmentation (for training only)&#10;AUGMENTATION = True&#10;ROTATION_RANGE = 15&#10;BRIGHTNESS_RANGE = 0.2&#10;CONTRAST_RANGE = 0.2&#10;&#10;# Device configuration&#10;DEVICE = 'cuda'  # Will auto-detect in code&#10;&#10;# Mixed precision training for memory efficiency&#10;USE_AMP = True  # Automatic Mixed Precision&#10;&#10;# Gradient accumulation for effective larger batch size&#10;GRADIENT_ACCUMULATION_STEPS = 2&#10;&#10;# Random seed for reproducibility&#10;SEED = 42&#10;&#10;# Advanced training strategies (from advanced_strategies.py)&#10;USE_CLASS_WEIGHTS = True  # Important for imbalanced dataset!&#10;USE_MIXUP = True  # Very effective for small datasets&#10;MIXUP_ALPHA = 0.2&#10;USE_LABEL_SMOOTHING = True&#10;LABEL_SMOOTHING = 0.1&#10;GRADIENT_CLIP_NORM = 1.0&#10;USE_COSINE_SCHEDULE = True  # Better than ReduceLROnPlateau&#10;WARMUP_EPOCHS = 5&#10;USE_TTA = False  # Disable for training, enable for inference" />
              <option name="updatedContent" value="&quot;&quot;&quot;&#10;Configuration file for SANGO-based Diabetic Retinopathy Detection System&#10;&quot;&quot;&quot;&#10;&#10;import os&#10;&#10;# Paths&#10;BASE_DIR = os.path.dirname(os.path.abspath(__file__))&#10;DATA_DIR = os.path.join(BASE_DIR, 'data')&#10;&#10;# Classification paths&#10;CLASS_TRAIN_IMG_DIR = os.path.join(DATA_DIR, 'B. Disease Grading', '1. Original Images', 'a. Training Set')&#10;CLASS_TEST_IMG_DIR = os.path.join(DATA_DIR, 'B. Disease Grading', '1. Original Images', 'b. Testing Set')&#10;CLASS_TRAIN_LABELS = os.path.join(DATA_DIR, 'B. Disease Grading', '2. Groundtruths', 'a. IDRiD_Disease Grading_Training Labels.csv')&#10;CLASS_TEST_LABELS = os.path.join(DATA_DIR, 'B. Disease Grading', '2. Groundtruths', 'b. IDRiD_Disease Grading_Testing Labels.csv')&#10;&#10;# Segmentation paths&#10;SEG_TRAIN_IMG_DIR = os.path.join(DATA_DIR, 'A. Segmentation', '1. Original Images', 'a. Training Set')&#10;SEG_TEST_IMG_DIR = os.path.join(DATA_DIR, 'A. Segmentation', '1. Original Images', 'b. Testing Set')&#10;SEG_TRAIN_MASK_DIR = os.path.join(DATA_DIR, 'A. Segmentation', '2. All Segmentation Groundtruths', 'a. Training Set')&#10;SEG_TEST_MASK_DIR = os.path.join(DATA_DIR, 'A. Segmentation', '2. All Segmentation Groundtruths', 'b. Testing Set')&#10;&#10;# Output directories&#10;OUTPUT_DIR = os.path.join(BASE_DIR, 'outputs')&#10;MODEL_DIR = os.path.join(OUTPUT_DIR, 'models')&#10;LOG_DIR = os.path.join(OUTPUT_DIR, 'logs')&#10;RESULT_DIR = os.path.join(OUTPUT_DIR, 'results')&#10;&#10;# Create output directories&#10;for dir_path in [OUTPUT_DIR, MODEL_DIR, LOG_DIR, RESULT_DIR]:&#10;    os.makedirs(dir_path, exist_ok=True)&#10;&#10;# Model hyperparameters - Optimized for better performance&#10;IMG_SIZE = 384  # Increased from 256 for better feature extraction&#10;BATCH_SIZE = 4  # Keep at 4 for CPU, can increase to 8-16 with GPU&#10;NUM_WORKERS = 2  # Reduced for stability&#10;NUM_CLASSES = 5  # DR grades: 0, 1, 2, 3, 4&#10;SEG_CLASSES = 3  # Microaneurysms, Haemorrhages, Hard Exudates&#10;&#10;# Training parameters&#10;LEARNING_RATE = 5e-5  # Reduced for more stable training&#10;NUM_EPOCHS = 50  # Increased for better convergence&#10;EARLY_STOPPING_PATIENCE = 15  # Increased patience&#10;WEIGHT_DECAY = 1e-4  # Increased for better regularization&#10;&#10;# SANGO algorithm parameters&#10;POPULATION_SIZE = 20  # Reduced for faster computation&#10;MAX_ITERATIONS = 30  # Reduced for faster training&#10;ALPHA = 2.0  # Self-adaptive parameter&#10;BETA = 1.5  # Northern Goshawk exploration parameter&#10;&#10;# GRU parameters&#10;GRU_HIDDEN_SIZE = 128  # Reduced from 256&#10;GRU_NUM_LAYERS = 2&#10;GRU_DROPOUT = 0.3&#10;&#10;# Feature extraction parameters&#10;LBP_POINTS = 8&#10;LBP_RADIUS = 1&#10;SURF_THRESHOLD = 100&#10;&#10;# Gabor filter parameters&#10;GABOR_FREQUENCY = 0.1&#10;GABOR_THETA_VALUES = 8  # Number of orientations&#10;GABOR_SIGMA = 3&#10;GABOR_LAMBDA = 10&#10;GABOR_GAMMA = 0.5&#10;&#10;# CLAHE parameters&#10;CLAHE_CLIP_LIMIT = 2.0&#10;CLAHE_TILE_GRID_SIZE = (8, 8)&#10;&#10;# Data augmentation (for training only)&#10;AUGMENTATION = True&#10;ROTATION_RANGE = 15&#10;BRIGHTNESS_RANGE = 0.2&#10;CONTRAST_RANGE = 0.2&#10;&#10;# Device configuration&#10;DEVICE = 'cuda'  # Will auto-detect in code&#10;&#10;# Mixed precision training for memory efficiency&#10;USE_AMP = True  # Automatic Mixed Precision&#10;&#10;# Gradient accumulation for effective larger batch size&#10;GRADIENT_ACCUMULATION_STEPS = 2&#10;&#10;# Random seed for reproducibility&#10;SEED = 42&#10;&#10;# Advanced training strategies (from advanced_strategies.py)&#10;USE_CLASS_WEIGHTS = True  # Important for imbalanced dataset!&#10;USE_MIXUP = True  # Very effective for small datasets&#10;MIXUP_ALPHA = 0.2&#10;USE_LABEL_SMOOTHING = True&#10;LABEL_SMOOTHING = 0.1&#10;GRADIENT_CLIP_NORM = 1.0&#10;USE_COSINE_SCHEDULE = True  # Better than ReduceLROnPlateau&#10;WARMUP_EPOCHS = 5&#10;USE_TTA = False  # Disable for training, enable for inference" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>